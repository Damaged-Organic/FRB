<?php
// src/AppBundle/Entity/EstateType.php
namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM,
    Doctrine\Common\Collections\ArrayCollection;

use Gedmo\Mapping\Annotation as Gedmo,
    Gedmo\Translatable\Translatable;

use AppBundle\Entity\Utility\DoctrineMapping\IdMapper,
    AppBundle\Entity\Utility\DoctrineMapping\TranslationMapper;

/**
 * @ORM\Table(name="estate_types")
 * @ORM\Entity(repositoryClass="AppBundle\Entity\Repository\EstateTypeRepository")
 *
 * @Gedmo\TranslationEntity(class="AppBundle\Entity\EstateTypeTranslation")
 */
class EstateType implements Translatable
{
    use IdMapper, TranslationMapper;

    /**
     * @ORM\OneToMany(targetEntity="EstateTypeTranslation", mappedBy="object", cascade={"persist", "remove"})
     **/
    protected $translations;

    /**
     * @ORM\OneToMany(targetEntity="Estate", mappedBy="estateType")
     **/
    protected $estate;

    /**
     * @ORM\ManyToOne(targetEntity="EstateType", inversedBy="child")
     * @ORM\JoinColumn(name="parent_id", referencedColumnName="id")
     **/
    protected $parent;

    /**
     * @ORM\OneToMany(targetEntity="EstateType", mappedBy="parent")
     **/
    protected $child;

    /**
     * @ORM\Column(type="string", length=127, nullable=false)
     */
    protected $stringId;

    /**
     * @ORM\Column(type="string", length=255, nullable=false)
     *
     * @Gedmo\Translatable
     */
    protected $title;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->translations = new ArrayCollection;
        $this->child        = new ArrayCollection;
    }

    /**
     * To string
     */
    public function __toString()
    {
        return ( $this->title ) ? $this->title : "";
    }
}